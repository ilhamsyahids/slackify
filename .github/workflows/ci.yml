name: Continuous Integration

on:
  pull_request:
  push:
    branches:
      - main

permissions:
  contents: read

concurrency: ci

jobs:
  test-typescript:
    name: TypeScript Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        id: setup-node
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: npm

      - name: Install Dependencies
        id: npm-ci
        run: npm ci

      - name: Check Format
        id: npm-format-check
        run: npm run format:check

      - name: Lint
        id: npm-lint
        run: npm run lint

      - name: Test
        id: npm-ci-test
        run: npm run ci-test

      - name: Upload results to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  test-docker:
    name: Docker Tests
    runs-on: ubuntu-latest
    # check `Makefile` for more details
    env:
      GITHUB_REPOSITORY: ${{ github.repository }}
      GITHUB_SHA: ${{ github.sha }}
      GITHUB_EVENT_NAME: ${{ github.event_name }}
      GITHUB_REF: ${{ github.ref }}
      GITHUB_WORKFLOW: ${{ github.workflow }}
      SLACK_WEBHOOK: '${{ secrets.SLACK_WEBHOOK_TEST }}'
      GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Run the Container
        run: |
          make test

  test-action:
    name: GitHub Actions Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Test Local Action
        id: test-action
        uses: ./
        with:
          type: ${{ job.status }}
          job_name: ${{ github.job }}
          mention: here
          mention_if: failure
          url: ${{ secrets.SLACK_WEBHOOK_TEST }}
          commit: true

      - name: Print Output
        id: output
        run: printf '${{ steps.test-action.outputs.payload }}'
